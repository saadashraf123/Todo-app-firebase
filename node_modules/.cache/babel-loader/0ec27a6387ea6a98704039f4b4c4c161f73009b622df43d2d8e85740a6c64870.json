{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { collection, query, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nconst initialState = {\n  todo: 0\n};\nexport const Slice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    getAllTodos: state => {\n      const q = query(collection(db, \"todos\"));\n      const unsub = onSnapshot(q, querySnapshot => {\n        let todosArray = [];\n        querySnapshot.forEach(doc => {\n          todosArray.push({\n            ...doc.data(),\n            id: doc.id\n          });\n        });\n        state.todos = todosArray;\n      });\n      return () => unsub();\n    }\n  }\n});\nexport const store = configureStore({\n  reducer: {\n    todos: Slice.reducer\n  },\n  middleware: [logger]\n});\nexport const {\n  getAllTodos\n} = Slice.actions;\nexport default Slice.reducer;","map":{"version":3,"names":["createSlice","configureStore","logger","collection","query","onSnapshot","db","initialState","todo","Slice","name","reducers","getAllTodos","state","q","unsub","querySnapshot","todosArray","forEach","doc","push","data","id","todos","store","reducer","middleware","actions"],"sources":["D:/react/ishaq/todo-app-firebase/src/Redux/Slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport { collection, query, onSnapshot } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\n\r\n\r\nconst initialState = {\r\n    todo: 0,\r\n}\r\n\r\nexport const Slice = createSlice({\r\n    name: 'todo',\r\n    initialState,\r\n    reducers: {\r\n        getAllTodos: (state) => {\r\n            const q = query(collection(db, \"todos\"));\r\n            const unsub = onSnapshot(q, (querySnapshot) => {\r\n                let todosArray = [];\r\n                querySnapshot.forEach((doc) => {\r\n                    todosArray.push({ ...doc.data(), id: doc.id });\r\n                });\r\n                state.todos = todosArray\r\n            });\r\n            return () => unsub();\r\n        },\r\n    },\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        todos: Slice.reducer,\r\n    },\r\n    middleware: [logger],\r\n})\r\n\r\nexport const { getAllTodos } = Slice.actions\r\n\r\nexport default Slice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,UAAU,EAAEC,KAAK,EAAEC,UAAU,QAAQ,oBAAoB;AAClE,SAASC,EAAE,QAAQ,aAAa;AAGhC,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGT,WAAW,CAAC;EAC7BU,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACNC,WAAW,EAAGC,KAAK,IAAK;MACpB,MAAMC,CAAC,GAAGV,KAAK,CAACD,UAAU,CAACG,EAAE,EAAE,OAAO,CAAC,CAAC;MACxC,MAAMS,KAAK,GAAGV,UAAU,CAACS,CAAC,EAAGE,aAAa,IAAK;QAC3C,IAAIC,UAAU,GAAG,EAAE;QACnBD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;UAC3BF,UAAU,CAACG,IAAI,CAAC;YAAE,GAAGD,GAAG,CAACE,IAAI,EAAE;YAAEC,EAAE,EAAEH,GAAG,CAACG;UAAG,CAAC,CAAC;QAClD,CAAC,CAAC;QACFT,KAAK,CAACU,KAAK,GAAGN,UAAU;MAC5B,CAAC,CAAC;MACF,OAAO,MAAMF,KAAK,EAAE;IACxB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMS,KAAK,GAAGvB,cAAc,CAAC;EAChCwB,OAAO,EAAE;IACLF,KAAK,EAAEd,KAAK,CAACgB;EACjB,CAAC;EACDC,UAAU,EAAE,CAACxB,MAAM;AACvB,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEU;AAAY,CAAC,GAAGH,KAAK,CAACkB,OAAO;AAE5C,eAAelB,KAAK,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}