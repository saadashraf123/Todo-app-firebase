{"ast":null,"code":"import _objectSpread from\"D:/react/ishaq/firebase-app/Todo-app-firebase/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"D:/react/ishaq/firebase-app/Todo-app-firebase/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/react/ishaq/firebase-app/Todo-app-firebase/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React from\"react\";import{useForm}from'react-hook-form';import{db}from\"../firebase\";import{collection,addDoc}from\"firebase/firestore\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AddTodo(){var _errors$title;var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,reset=_useForm.reset,errors=_useForm.formState.errors;var submitHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return addDoc(collection(db,\"todos\"),{title:data.title,completed:false});case 2:reset();case 3:case\"end\":return _context.stop();}},_callee);}));return function submitHandler(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"todo\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add New Todos\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(submitHandler),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"title\",{required:\"This is Required\"})),{},{placeholder:\"Add Title\"})),/*#__PURE__*/_jsx(\"p\",{children:(_errors$title=errors.title)===null||_errors$title===void 0?void 0:_errors$title.message}),/*#__PURE__*/_jsx(\"input\",{className:\"button add-button\",type:\"submit\",value:\"Add Todo\"})]})]});}","map":{"version":3,"names":["React","useForm","db","collection","addDoc","AddTodo","register","handleSubmit","reset","errors","formState","submitHandler","data","title","completed","required","message"],"sources":["D:/react/ishaq/firebase-app/Todo-app-firebase/src/components/AddTodo.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from 'react-hook-form'\r\nimport { db } from \"../firebase\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\n\r\ntype FormValues = {\r\n    title: string;\r\n    completed: boolean;\r\n};\r\nexport default function AddTodo() {\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm<FormValues>();\r\n    const submitHandler = async (data: FormValues) => {\r\n        await addDoc(collection(db, \"todos\"), {\r\n            title: data.title,\r\n            completed: false\r\n        });\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo\" >\r\n            <h3>Add New Todos</h3>\r\n            <form onSubmit={handleSubmit(submitHandler)}>\r\n                <input {...register(\"title\", { required: \"This is Required\" })} placeholder=\"Add Title\" />\r\n                <p>{errors.title?.message}</p>\r\n                <input className=\"button add-button\" type='submit' value=\"Add Todo\" />\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n}"],"mappings":"wZAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,iBAAiB,CACzC,OAASC,EAAE,KAAQ,aAAa,CAChC,OAASC,UAAU,CAAEC,MAAM,KAAQ,oBAAoB,CAAC,wFAMxD,cAAe,SAASC,QAAO,EAAG,mBAC9B,aAAiEJ,OAAO,EAAc,CAA9EK,QAAQ,UAARA,QAAQ,CAAEC,YAAY,UAAZA,YAAY,CAAEC,KAAK,UAALA,KAAK,CAAeC,MAAM,UAAnBC,SAAS,CAAID,MAAM,CAC1D,GAAME,cAAa,4FAAG,iBAAOC,IAAgB,yIACnCR,OAAM,CAACD,UAAU,CAACD,EAAE,CAAE,OAAO,CAAC,CAAE,CAClCW,KAAK,CAAED,IAAI,CAACC,KAAK,CACjBC,SAAS,CAAE,KACf,CAAC,CAAC,QACFN,KAAK,EAAE,CAAC,qDACX,kBANKG,cAAa,4CAMlB,CAED,mBACI,aAAK,SAAS,CAAC,MAAM,wBACjB,oBAAI,eAAa,EAAK,cACtB,cAAM,QAAQ,CAAEJ,YAAY,CAACI,aAAa,CAAE,wBACxC,4CAAWL,QAAQ,CAAC,OAAO,CAAE,CAAES,QAAQ,CAAE,kBAAmB,CAAC,CAAC,MAAE,WAAW,CAAC,WAAW,GAAG,cAC1F,kCAAIN,MAAM,CAACI,KAAK,wCAAZ,cAAcG,OAAO,EAAK,cAC9B,cAAO,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAG,GACnE,GACL,CAGd"},"metadata":{},"sourceType":"module","externalDependencies":[]}