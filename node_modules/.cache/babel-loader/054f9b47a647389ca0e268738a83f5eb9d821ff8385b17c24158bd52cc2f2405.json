{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { configureStore } from '@reduxjs/toolkit';\n// import logger from 'redux-logger'\nimport { collection, query, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nconst initialState = {\n  todo: []\n};\nexport const Slice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    getAllTodos: state => {\n      const q = query(collection(db, \"todos\"));\n      let todosArray = [];\n      querySnapshot.forEach(doc => {\n        todosArray.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n      state.todo = todosArray;\n    }\n  }\n});\nexport const store = configureStore({\n  reducer: {\n    todos: Slice.reducer\n  }\n  // middleware: [logger],\n});\n\nexport const {\n  getAllTodos\n} = Slice.actions;\nexport default Slice.reducer;","map":{"version":3,"names":["createSlice","configureStore","collection","query","onSnapshot","db","initialState","todo","Slice","name","reducers","getAllTodos","state","q","todosArray","querySnapshot","forEach","doc","push","data","id","store","reducer","todos","actions"],"sources":["D:/react/ishaq/todo-app-firebase/src/Redux/Slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n// import logger from 'redux-logger'\r\nimport { collection, query, onSnapshot } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\n\r\n\r\nconst initialState = {\r\n    todo: [],\r\n}\r\n\r\nexport const Slice = createSlice({\r\n    name: 'todo',\r\n    initialState,\r\n    reducers: {\r\n        getAllTodos: (state) => {\r\n            const q = query(collection(db, \"todos\"));\r\n                let todosArray = [];\r\n                querySnapshot.forEach((doc) => {\r\n                    todosArray.push({ ...doc.data(), id: doc.id });\r\n                });\r\n                state.todo = todosArray\r\n        },\r\n    },\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        todos: Slice.reducer,\r\n    },\r\n    // middleware: [logger],\r\n})\r\n\r\nexport const { getAllTodos } = Slice.actions\r\n\r\nexport default Slice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,kBAAkB;AACjD;AACA,SAASC,UAAU,EAAEC,KAAK,EAAEC,UAAU,QAAQ,oBAAoB;AAClE,SAASC,EAAE,QAAQ,aAAa;AAGhC,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGR,WAAW,CAAC;EAC7BS,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACNC,WAAW,EAAGC,KAAK,IAAK;MACpB,MAAMC,CAAC,GAAGV,KAAK,CAACD,UAAU,CAACG,EAAE,EAAE,OAAO,CAAC,CAAC;MACpC,IAAIS,UAAU,GAAG,EAAE;MACnBC,aAAa,CAACC,OAAO,CAAEC,GAAG,IAAK;QAC3BH,UAAU,CAACI,IAAI,CAAC;UAAE,GAAGD,GAAG,CAACE,IAAI,EAAE;UAAEC,EAAE,EAAEH,GAAG,CAACG;QAAG,CAAC,CAAC;MAClD,CAAC,CAAC;MACFR,KAAK,CAACL,IAAI,GAAGO,UAAU;IAC/B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMO,KAAK,GAAGpB,cAAc,CAAC;EAChCqB,OAAO,EAAE;IACLC,KAAK,EAAEf,KAAK,CAACc;EACjB;EACA;AACJ,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEX;AAAY,CAAC,GAAGH,KAAK,CAACgB,OAAO;AAE5C,eAAehB,KAAK,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}